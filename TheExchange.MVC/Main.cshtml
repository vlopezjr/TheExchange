@model PoshRed.WebUI.Models.Appointment

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<div class="row-fluid">
    <div class="span1">&nbsp;</div>
    <div class="span11">
@using (Html.BeginForm("Main", "Appointment")) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend style="color: White;">Booking Details</legend>

        @if (!Request.IsAuthenticated)
        {
        <div class="editor-label">
            Rep Code
        </div>
        <div class="editor-field">
           <input type="text" id="RepCode" name="RepCode" value="@Session["RepCode"]" /> <span class="small">(Optional)</span>
        </div>
        }
        <div class="editor-label">
            Venue Type
        </div>
        <div class="editor-field">
           @Html.DropDownListFor(model => model.VenueTypeId, (SelectList)ViewBag.VenueTypes, "-select one-", new { style = "Width: 200px" })           
           @Html.ValidationMessageFor(model => model.VenueTypeId)
        </div> 
       
       <div>
            <div style="float: left;"> 
               <div class="editor-label">
                    Venue Name
                </div>
                <div class="editor-field">
                    @Html.DropDownList("VenueId", (SelectList)ViewBag.Venues, "-select one-", new { style = "Width: 200px" })            
                    @Html.ValidationMessageFor(model => model.VenueId)            
                </div>  
             </div>

            <div style="float: left; margin-left: 5px; display: none;" id="optionsDiv"> 
                <div class="editor-label">
                    Options
                </div>
                <div class="editor-field">
                    <select id="ServiceId" name="ServiceId" style="Width: 200px"></select>
                </div>
            </div>
        </div>

        <div style="clear: both;"></div>

        <div class="editor-label">
            Date/Time of Visit
        </div>
        <div class="editor-field">

        
		    @Html.TextBoxFor(model => model.ApptDate)
		    
            <div class="input-append bootstrap-timepicker">
            <input id="ApptTime" name="ApptTime" type="text" class="input-small">
            <span class="add-on"><i class="icon-time"></i></span>
        </div>
       
            @*<input type="text" id="ApptTime" name="ApptTime" />*@
           
        </div>           
      
        <div>
            <div style="float: left;"> 
                 <div class="editor-label">
                    First Name
                </div>               
                <div class="editor-field">
                    @Html.EditorFor(model => model.FirstName)                
                </div>
            </div>

            <div style="float: left; margin-left: 5px;">  
                <div class="editor-label">
                    Last Name
                </div>               
                <div class="editor-field">
                    @Html.EditorFor(model => model.LastName)               
                </div>
            </div>            
        </div>

        <div style="clear: both;"></div>

        <div>
            <div style="float: left;">
               <div class="editor-label">
                    Email
                </div> 
                <div class="editor-field">
                    @Html.EditorFor(model => model.Email)                
                </div>
            </div>

            <div style="float: left; margin-left: 5px;">
                <div class="editor-label">
                    Mobile
                </div> 
                <div class="editor-field">
                    @Html.EditorFor(model => model.Phone)                
                </div>
            </div>            
        </div>   
        
        <div style="clear: both;"></div>     
                           
        <div>
            <div style="float: left;">
                <div class="editor-label">
                    Female Guests
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.FemaleCount, (SelectList)ViewBag.GenderCounts, "-select one-", new { style = "Width: 200px" })           
                </div>
            </div>
            <div style="float: left; margin-left: 5px;">
                <div class="editor-label">
                    Male Guests
                </div>
                <div class="editor-field">
                   @Html.DropDownListFor(model => model.MaleCount, (SelectList)ViewBag.GenderCounts, "-select one-", new { style = "Width: 200px" })           
                </div>
            </div> 
	    </div>

        <div style="clear: both;"></div>

	    <div id="locationDiv">
            <div style="float: left;">
		        <div class="editor-label">
                    <span>Pickup Location</span>
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.LocationId, (SelectList)ViewBag.Locations, "-select one-", new { style = "Width: 200px" })                     
                    @Html.ValidationMessageFor(model => model.LocationId)
                </div>
            </div>

            @if(User.IsInRole("Rep"))
            {
            <div style="float: left; margin-left: 5px;">
                <div class="editor-label">
                    <span>Other Location</span>
                </div>
                <div class="editor-field">
                    @Html.TextBox("OtherLocation")
                </div>
            </div>
            }
	    </div>
        
        <div style="clear: both;"></div>

        <div id="extrasDiv">
            <div style="float: left;">
                <div class="editor-label">
                    Contact Promoter
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.ContactPromoter)           
                </div>
            </div>
            <div style="float: left; margin-left: 115px;">
                <div class="editor-label">
                    Bottle Service
                </div>
                <div class="editor-field">
                   @Html.EditorFor(model => model.BottleService)           
                </div>
            </div> 
	    </div>

        <div style="clear: both;"></div>

        <p>
        <br />
            <input class="submitButton" type="submit" id="create" value="Add Visit" />
        </p>
    </fieldset>
}
</div>
</div>
<script type="text/javascript">
    $(document).ready(function () {

        $("#Phone").mask("(999)999-9999");

        $("#ApptDate").datepicker('setValue', new Date());

        $('#ApptTime').timepicker({
            minuteStep: 15            
        });
       


        $("#VenueTypeId").change(function () {
            var strSelected = "";
            $("#VenueTypeId option:selected").each(function () {
                strSelected += $(this)[0].value;
            });

            if (strSelected === "0" || strSelected === "") {
                $("#VenueId").clearSelect();
                $("#ServiceId").clearSelect();
            }
            else {
                //alert(strSelected);
                var url = "/Appointment/VenueList/" + strSelected;

                $.post(url, function (data) {
                    $("#VenueId").fillSelect(data, "venue");
                });

                //                if (IsNotStripClub(strSelected)) {
                //                    // $("#ServiceId").fillSelect(GetClubData(strSelected), "options");

                //                    url = "/Venue/Services/" + strSelected;

                //                    $.post(url, function (data) {
                //                        $("#VenueId").fillSelect(data, "options");
                //                    });
                //                }
                //                else {
                //                    $("#ServiceId").clearSelect();
                //                }

            }

            if (IsNotStripClub(strSelected)) {
                if ($('#ApptTime').is(':visible'))
                    $('#ApptTime').hide();

                if ($('#locationDiv').is(':visible'))
                    $('#locationDiv').hide();

                if ($('#extrasDiv').is(':visible'))
                    $('#extrasDiv').hide();

                if (!$('#optionsDiv').is(':visible'))
                    $('#optionsDiv').show();

            }
            else {

                if (!$('#ApptTime').is(':visible'))
                    $('#ApptTime').show();

                if (!$('#locationDiv').is(':visible'))
                    $('#locationDiv').show();

                if (!$('#extrasDiv').is(':visible'))
                    $('#extrasDiv').show();

                if ($('#optionsDiv').is(':visible'))
                    $('#optionsDiv').hide();
            }
        });

        $("#VenueId").change(function () {
            var strTypeSelected = "";
            $("#VenueTypeId option:selected").each(function () {
                strTypeSelected += $(this)[0].value;
            });

            var strVenueSelected = "";
            $("#VenueId option:selected").each(function () {
                strVenueSelected += $(this)[0].value;
            });


            if (strTypeSelected !== "0" && strTypeSelected !== "" && strVenueSelected !== "0"
                && strVenueSelected !== "" && IsNotStripClub(strTypeSelected)) {

                var url = "/Appointment/VenueServicesList/" + strVenueSelected;

                $.post(url, function (data) {
                    if (data.length > 0) {
                        $("#ServiceId").fillSelect(data, "options");
                        $("#ApptDate").datepicker("setDate", 1);
                    }
                    else {
                        $("#ServiceId").clearSelect();
                    }
                });

            }
            else {
                $("#ServiceId").clearSelect();
            }
        });

        $("#FemaleCount").change(function () {
            EnableDisableCreate();
        });

        $("#MaleCount").change(function () {
            EnableDisableCreate();
        });
    });

    function GetClubData(selectedValue) {
        if (selectedValue === "5") { // Pool Party
            return [{ "OptionId": 1, "OptionName": "Guest List" }, { "OptionId": 2, "OptionName": "Bottle Service" }, { "OptionId": 3, "OptionName": "VIP / No Line" }, { "OptionId": 4, "OptionName": "Cabana" }, { "OptionId": 5, "OptionName": "Daybed" }];
        }

        return [{ "OptionId": 1, "OptionName": "Guest List" }, { "OptionId": 2, "OptionName": "Bottle Service" }, { "OptionId": 3, "OptionName": "VIP / No Line" }];
    }

    function IsNotStripClub(selectedValue)
    {
        return (selectedValue === "1" || selectedValue === "2" || selectedValue === "4" || selectedValue === "5" || selectedValue ==="9");
    }

    
    function EnableDisableCreate() {
        var femaleCount = parseInt($("#FemaleCount").val());
        var maleCount = parseInt($("#MaleCount").val());

        var createButton = $("#create").attr("disabled");

        if ((femaleCount > 0 || maleCount > 0) && createButton == "disabled") {
            $("#create").removeAttr("disabled");
        }       
    }

    $.fn.clearSelect = function() {
         return this.each(function() {
             if (this.tagName == 'SELECT')
                 this.options.length = 0;
         });
     }


     $.fn.fillSelect = function (data, type) {
         return this.clearSelect().each(function () {
             if (this.tagName == 'SELECT') {
                 var dropdownList = this;
                 var defaultOption = new Option("-select one-", "0");

                 if ($.browser.msie) {
                     dropdownList.add(defaultOption);
                 }
                 else {
                     dropdownList.add(defaultOption, null);
                 }

                 var initialServiceSelected = false;

                 $.each(data, function (index, optionData) {
                     var option;                     

                     if (type === "venue") {
                         option = new Option(optionData.VenueName, optionData.VenueId);
                     }
                     else {
                         if (optionData.ServiceId == "1") {
                             option = new Option(optionData.Name, optionData.ServiceId);
                             option.selected = true;
                             initialServiceSelected = true;
                         }
                         else if (!initialServiceSelected && optionData.ServiceId == "3") {
                             option = new Option(optionData.Name, optionData.ServiceId);
                             option.selected = true;
                             initialServiceSelected = true;
                         }
                         else {
                             option = new Option(optionData.Name, optionData.ServiceId);
                         }
                     }

                     if ($.browser.msie) {
                         dropdownList.add(option);
                     }
                     else {
                         dropdownList.add(option, null);
                     }

                 });
             }
         });
     }
</script>